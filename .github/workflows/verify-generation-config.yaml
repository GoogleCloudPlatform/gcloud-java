name: Verify Generation Configuration
on:
  schedule:
  - cron: '0 2 * * *' # nightly at 2 am UTC
  push:
    branches:
    - "chore/create-pr"
  workflow_dispatch:

jobs:
  generate-from-configuration:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        java-version: 11
        distribution: temurin
        cache: maven
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: copy generation scripts
      shell: bash
      run: |
        # checkout `library_generation` directory from sdk-platform-java
        git clone https://github.com/googleapis/sdk-platform-java.git
        pushd sdk-platform-java
        git pull
        cp -r library_generation ../
        popd
        rm -rf sdk-platform-java
    - name: install python dependencies
      shell: bash
      run: |
        set -ex
        pushd library_generation
        pip install -r requirements.in
        pip install .
        popd
    - name: generate from configuration
      shell: bash
      run: |
        git config --global user.email "github-workflow@github.com"
        git config --global user.name "Github Workflow"
        python library_generation/generate_repo.py generate --generation-config-yaml=$(pwd)/generation_config.yaml --repository-path=.
    - name: create a pull request
      shell: bash
      run: |
        # create and push to branch in origin
        # random_id allows multiple runs of this workflow
        random_id=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 5; echo)
        branch_name="generation/${random_id}"
        git checkout -b "${branch_name}"
        git add java-* gapic-libraries-bom/ pom.xml versions.txt
        generation_time=$(date -u)
        commit_message="chore: library generation at ${generation_time}"
        git commit -m "${commit_message}"
        git remote add monorepo https://cloud-java-bot:${GH_TOKEN}@github.com/${{ github.repository }}.git
        git fetch -q --unshallow monorepo
        git push -f monorepo "${branch_name}"
        # create PR
        pr_body="Generated by @${USERNAME} via [verify-generation-config.yaml](https://github.com/googleapis/google-cloud-java/actions/workflows/verify-generation-config.yaml)

        Command used:

        \`\`\`
        python library_generation/generate_repo.py generate --generation-config-yaml=$(pwd)/generation_config.yaml --repository-path=.
        \`\`\`"
        gh pr create --title "${commit_message}" --head "${branch_name}" --body "${pr_body}"
      env:
        USERNAME: ${{ github.actor }}
        GH_TOKEN: ${{ secrets.CLOUD_JAVA_BOT_TOKEN }}