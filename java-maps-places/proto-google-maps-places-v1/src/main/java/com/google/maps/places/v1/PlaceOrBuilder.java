/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/place.proto

package com.google.maps.places.v1;

public interface PlaceOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.places.v1.Place)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The unique identifier of a place.
   * </pre>
   *
   * <code>string id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The id.
   */
  java.lang.String getId();
  /**
   *
   *
   * <pre>
   * Required. The unique identifier of a place.
   * </pre>
   *
   * <code>string id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString getIdBytes();

  /**
   *
   *
   * <pre>
   * The localized name of the place, suitable as a short human-readable
   * description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.
   * </pre>
   *
   * <code>.google.type.LocalizedText display_name = 31;</code>
   *
   * @return Whether the displayName field is set.
   */
  boolean hasDisplayName();
  /**
   *
   *
   * <pre>
   * The localized name of the place, suitable as a short human-readable
   * description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.
   * </pre>
   *
   * <code>.google.type.LocalizedText display_name = 31;</code>
   *
   * @return The displayName.
   */
  com.google.type.LocalizedText getDisplayName();
  /**
   *
   *
   * <pre>
   * The localized name of the place, suitable as a short human-readable
   * description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.
   * </pre>
   *
   * <code>.google.type.LocalizedText display_name = 31;</code>
   */
  com.google.type.LocalizedTextOrBuilder getDisplayNameOrBuilder();

  /**
   *
   *
   * <pre>
   * A set of type tags for this result. For example, "political" and
   * "locality".
   * </pre>
   *
   * <code>repeated string types = 5;</code>
   *
   * @return A list containing the types.
   */
  java.util.List<java.lang.String> getTypesList();
  /**
   *
   *
   * <pre>
   * A set of type tags for this result. For example, "political" and
   * "locality".
   * </pre>
   *
   * <code>repeated string types = 5;</code>
   *
   * @return The count of types.
   */
  int getTypesCount();
  /**
   *
   *
   * <pre>
   * A set of type tags for this result. For example, "political" and
   * "locality".
   * </pre>
   *
   * <code>repeated string types = 5;</code>
   *
   * @param index The index of the element to return.
   * @return The types at the given index.
   */
  java.lang.String getTypes(int index);
  /**
   *
   *
   * <pre>
   * A set of type tags for this result. For example, "political" and
   * "locality".
   * </pre>
   *
   * <code>repeated string types = 5;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the types at the given index.
   */
  com.google.protobuf.ByteString getTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * A human-readable phone number for the place, in national format.
   * </pre>
   *
   * <code>string national_phone_number = 7;</code>
   *
   * @return The nationalPhoneNumber.
   */
  java.lang.String getNationalPhoneNumber();
  /**
   *
   *
   * <pre>
   * A human-readable phone number for the place, in national format.
   * </pre>
   *
   * <code>string national_phone_number = 7;</code>
   *
   * @return The bytes for nationalPhoneNumber.
   */
  com.google.protobuf.ByteString getNationalPhoneNumberBytes();

  /**
   *
   *
   * <pre>
   * A human-readable phone number for the place, in international format.
   * </pre>
   *
   * <code>string international_phone_number = 8;</code>
   *
   * @return The internationalPhoneNumber.
   */
  java.lang.String getInternationalPhoneNumber();
  /**
   *
   *
   * <pre>
   * A human-readable phone number for the place, in international format.
   * </pre>
   *
   * <code>string international_phone_number = 8;</code>
   *
   * @return The bytes for internationalPhoneNumber.
   */
  com.google.protobuf.ByteString getInternationalPhoneNumberBytes();

  /**
   *
   *
   * <pre>
   * A full, human-readable address for this place.
   * </pre>
   *
   * <code>string formatted_address = 9;</code>
   *
   * @return The formattedAddress.
   */
  java.lang.String getFormattedAddress();
  /**
   *
   *
   * <pre>
   * A full, human-readable address for this place.
   * </pre>
   *
   * <code>string formatted_address = 9;</code>
   *
   * @return The bytes for formattedAddress.
   */
  com.google.protobuf.ByteString getFormattedAddressBytes();

  /**
   *
   *
   * <pre>
   * Repeated components for each locality level.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.AddressComponent address_components = 10;</code>
   */
  java.util.List<com.google.maps.places.v1.Place.AddressComponent> getAddressComponentsList();
  /**
   *
   *
   * <pre>
   * Repeated components for each locality level.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.AddressComponent address_components = 10;</code>
   */
  com.google.maps.places.v1.Place.AddressComponent getAddressComponents(int index);
  /**
   *
   *
   * <pre>
   * Repeated components for each locality level.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.AddressComponent address_components = 10;</code>
   */
  int getAddressComponentsCount();
  /**
   *
   *
   * <pre>
   * Repeated components for each locality level.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.AddressComponent address_components = 10;</code>
   */
  java.util.List<? extends com.google.maps.places.v1.Place.AddressComponentOrBuilder>
      getAddressComponentsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Repeated components for each locality level.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.AddressComponent address_components = 10;</code>
   */
  com.google.maps.places.v1.Place.AddressComponentOrBuilder getAddressComponentsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Plus code of the place location lat/long.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.PlusCode plus_code = 11;</code>
   *
   * @return Whether the plusCode field is set.
   */
  boolean hasPlusCode();
  /**
   *
   *
   * <pre>
   * Plus code of the place location lat/long.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.PlusCode plus_code = 11;</code>
   *
   * @return The plusCode.
   */
  com.google.maps.places.v1.Place.PlusCode getPlusCode();
  /**
   *
   *
   * <pre>
   * Plus code of the place location lat/long.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.PlusCode plus_code = 11;</code>
   */
  com.google.maps.places.v1.Place.PlusCodeOrBuilder getPlusCodeOrBuilder();

  /**
   *
   *
   * <pre>
   * The position of this place.
   * </pre>
   *
   * <code>.google.type.LatLng location = 12;</code>
   *
   * @return Whether the location field is set.
   */
  boolean hasLocation();
  /**
   *
   *
   * <pre>
   * The position of this place.
   * </pre>
   *
   * <code>.google.type.LatLng location = 12;</code>
   *
   * @return The location.
   */
  com.google.type.LatLng getLocation();
  /**
   *
   *
   * <pre>
   * The position of this place.
   * </pre>
   *
   * <code>.google.type.LatLng location = 12;</code>
   */
  com.google.type.LatLngOrBuilder getLocationOrBuilder();

  /**
   *
   *
   * <pre>
   * A viewport suitable for displaying the place on an average-sized map.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 13;</code>
   *
   * @return Whether the viewport field is set.
   */
  boolean hasViewport();
  /**
   *
   *
   * <pre>
   * A viewport suitable for displaying the place on an average-sized map.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 13;</code>
   *
   * @return The viewport.
   */
  com.google.geo.type.Viewport getViewport();
  /**
   *
   *
   * <pre>
   * A viewport suitable for displaying the place on an average-sized map.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 13;</code>
   */
  com.google.geo.type.ViewportOrBuilder getViewportOrBuilder();

  /**
   *
   *
   * <pre>
   * A rating between 1.0 and 5.0, based on user reviews of this place.
   * </pre>
   *
   * <code>double rating = 14;</code>
   *
   * @return The rating.
   */
  double getRating();

  /**
   *
   *
   * <pre>
   * A URL providing more information about this place.
   * </pre>
   *
   * <code>string google_maps_uri = 15;</code>
   *
   * @return The googleMapsUri.
   */
  java.lang.String getGoogleMapsUri();
  /**
   *
   *
   * <pre>
   * A URL providing more information about this place.
   * </pre>
   *
   * <code>string google_maps_uri = 15;</code>
   *
   * @return The bytes for googleMapsUri.
   */
  com.google.protobuf.ByteString getGoogleMapsUriBytes();

  /**
   *
   *
   * <pre>
   * The authoritative website for this place, e.g. a business' homepage.
   * Note that for places that are part of a chain (e.g. an IKEA store), this
   * will usually be the website for the individual store, not the overall
   * chain.
   * </pre>
   *
   * <code>string website_uri = 16;</code>
   *
   * @return The websiteUri.
   */
  java.lang.String getWebsiteUri();
  /**
   *
   *
   * <pre>
   * The authoritative website for this place, e.g. a business' homepage.
   * Note that for places that are part of a chain (e.g. an IKEA store), this
   * will usually be the website for the individual store, not the overall
   * chain.
   * </pre>
   *
   * <code>string website_uri = 16;</code>
   *
   * @return The bytes for websiteUri.
   */
  com.google.protobuf.ByteString getWebsiteUriBytes();

  /**
   *
   *
   * <pre>
   * List of reviews about this place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Review reviews = 20;</code>
   */
  java.util.List<com.google.maps.places.v1.Place.Review> getReviewsList();
  /**
   *
   *
   * <pre>
   * List of reviews about this place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Review reviews = 20;</code>
   */
  com.google.maps.places.v1.Place.Review getReviews(int index);
  /**
   *
   *
   * <pre>
   * List of reviews about this place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Review reviews = 20;</code>
   */
  int getReviewsCount();
  /**
   *
   *
   * <pre>
   * List of reviews about this place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Review reviews = 20;</code>
   */
  java.util.List<? extends com.google.maps.places.v1.Place.ReviewOrBuilder>
      getReviewsOrBuilderList();
  /**
   *
   *
   * <pre>
   * List of reviews about this place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Review reviews = 20;</code>
   */
  com.google.maps.places.v1.Place.ReviewOrBuilder getReviewsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The regular hours of operation.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours opening_hours = 21;</code>
   *
   * @return Whether the openingHours field is set.
   */
  boolean hasOpeningHours();
  /**
   *
   *
   * <pre>
   * The regular hours of operation.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours opening_hours = 21;</code>
   *
   * @return The openingHours.
   */
  com.google.maps.places.v1.Place.OpeningHours getOpeningHours();
  /**
   *
   *
   * <pre>
   * The regular hours of operation.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours opening_hours = 21;</code>
   */
  com.google.maps.places.v1.Place.OpeningHoursOrBuilder getOpeningHoursOrBuilder();

  /**
   *
   *
   * <pre>
   * Number of minutes this place's timezone is currently offset from UTC.
   * This is expressed in minutes to support timezones that are offset by
   * fractions of an hour, e.g. X hours and 15 minutes.
   * </pre>
   *
   * <code>int32 utc_offset_minutes = 22;</code>
   *
   * @return The utcOffsetMinutes.
   */
  int getUtcOffsetMinutes();

  /**
   *
   *
   * <pre>
   * The place's address in adr microformat: http://microformats.org/wiki/adr.
   * </pre>
   *
   * <code>string adr_format_address = 24;</code>
   *
   * @return The adrFormatAddress.
   */
  java.lang.String getAdrFormatAddress();
  /**
   *
   *
   * <pre>
   * The place's address in adr microformat: http://microformats.org/wiki/adr.
   * </pre>
   *
   * <code>string adr_format_address = 24;</code>
   *
   * @return The bytes for adrFormatAddress.
   */
  com.google.protobuf.ByteString getAdrFormatAddressBytes();

  /**
   *
   *
   * <pre>
   * The business status for the place.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.BusinessStatus business_status = 25;</code>
   *
   * @return The enum numeric value on the wire for businessStatus.
   */
  int getBusinessStatusValue();
  /**
   *
   *
   * <pre>
   * The business status for the place.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.BusinessStatus business_status = 25;</code>
   *
   * @return The businessStatus.
   */
  com.google.maps.places.v1.Place.BusinessStatus getBusinessStatus();

  /**
   *
   *
   * <pre>
   * Price level of the place.
   * </pre>
   *
   * <code>.google.maps.places.v1.PriceLevel price_level = 26;</code>
   *
   * @return The enum numeric value on the wire for priceLevel.
   */
  int getPriceLevelValue();
  /**
   *
   *
   * <pre>
   * Price level of the place.
   * </pre>
   *
   * <code>.google.maps.places.v1.PriceLevel price_level = 26;</code>
   *
   * @return The priceLevel.
   */
  com.google.maps.places.v1.PriceLevel getPriceLevel();

  /**
   *
   *
   * <pre>
   * A set of data provider that must be shown with this result.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Attribution attributions = 27;</code>
   */
  java.util.List<com.google.maps.places.v1.Place.Attribution> getAttributionsList();
  /**
   *
   *
   * <pre>
   * A set of data provider that must be shown with this result.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Attribution attributions = 27;</code>
   */
  com.google.maps.places.v1.Place.Attribution getAttributions(int index);
  /**
   *
   *
   * <pre>
   * A set of data provider that must be shown with this result.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Attribution attributions = 27;</code>
   */
  int getAttributionsCount();
  /**
   *
   *
   * <pre>
   * A set of data provider that must be shown with this result.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Attribution attributions = 27;</code>
   */
  java.util.List<? extends com.google.maps.places.v1.Place.AttributionOrBuilder>
      getAttributionsOrBuilderList();
  /**
   *
   *
   * <pre>
   * A set of data provider that must be shown with this result.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.Attribution attributions = 27;</code>
   */
  com.google.maps.places.v1.Place.AttributionOrBuilder getAttributionsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The total number of reviews (with or without text) for this place.
   * </pre>
   *
   * <code>int32 user_rating_count = 28;</code>
   *
   * @return The userRatingCount.
   */
  int getUserRatingCount();

  /**
   *
   *
   * <pre>
   * A truncated URL to an v2 icon mask. User can access different icon type by
   * appending type suffix to the end (eg, ".svg" or ".png").
   * </pre>
   *
   * <code>string icon_mask_base_uri = 29;</code>
   *
   * @return The iconMaskBaseUri.
   */
  java.lang.String getIconMaskBaseUri();
  /**
   *
   *
   * <pre>
   * A truncated URL to an v2 icon mask. User can access different icon type by
   * appending type suffix to the end (eg, ".svg" or ".png").
   * </pre>
   *
   * <code>string icon_mask_base_uri = 29;</code>
   *
   * @return The bytes for iconMaskBaseUri.
   */
  com.google.protobuf.ByteString getIconMaskBaseUriBytes();

  /**
   *
   *
   * <pre>
   * Background color for icon_mask in hex format, e.g. #909CE1.
   * </pre>
   *
   * <code>string icon_background_color = 30;</code>
   *
   * @return The iconBackgroundColor.
   */
  java.lang.String getIconBackgroundColor();
  /**
   *
   *
   * <pre>
   * Background color for icon_mask in hex format, e.g. #909CE1.
   * </pre>
   *
   * <code>string icon_background_color = 30;</code>
   *
   * @return The bytes for iconBackgroundColor.
   */
  com.google.protobuf.ByteString getIconBackgroundColorBytes();

  /**
   *
   *
   * <pre>
   * Specifies if the business supports takeout.
   * </pre>
   *
   * <code>optional bool takeout = 33;</code>
   *
   * @return Whether the takeout field is set.
   */
  boolean hasTakeout();
  /**
   *
   *
   * <pre>
   * Specifies if the business supports takeout.
   * </pre>
   *
   * <code>optional bool takeout = 33;</code>
   *
   * @return The takeout.
   */
  boolean getTakeout();

  /**
   *
   *
   * <pre>
   * Specifies if the business supports delivery.
   * </pre>
   *
   * <code>optional bool delivery = 34;</code>
   *
   * @return Whether the delivery field is set.
   */
  boolean hasDelivery();
  /**
   *
   *
   * <pre>
   * Specifies if the business supports delivery.
   * </pre>
   *
   * <code>optional bool delivery = 34;</code>
   *
   * @return The delivery.
   */
  boolean getDelivery();

  /**
   *
   *
   * <pre>
   * Specifies if the business supports indoor or outdoor seating options.
   * </pre>
   *
   * <code>optional bool dine_in = 35;</code>
   *
   * @return Whether the dineIn field is set.
   */
  boolean hasDineIn();
  /**
   *
   *
   * <pre>
   * Specifies if the business supports indoor or outdoor seating options.
   * </pre>
   *
   * <code>optional bool dine_in = 35;</code>
   *
   * @return The dineIn.
   */
  boolean getDineIn();

  /**
   *
   *
   * <pre>
   * Specifies if the business supports curbside pickup.
   * </pre>
   *
   * <code>optional bool curbside_pickup = 36;</code>
   *
   * @return Whether the curbsidePickup field is set.
   */
  boolean hasCurbsidePickup();
  /**
   *
   *
   * <pre>
   * Specifies if the business supports curbside pickup.
   * </pre>
   *
   * <code>optional bool curbside_pickup = 36;</code>
   *
   * @return The curbsidePickup.
   */
  boolean getCurbsidePickup();

  /**
   *
   *
   * <pre>
   * Specifies if the place has an entrance that is wheelchair-accessible.
   * </pre>
   *
   * <code>optional bool wheelchair_accessible_entrance = 37;</code>
   *
   * @return Whether the wheelchairAccessibleEntrance field is set.
   */
  boolean hasWheelchairAccessibleEntrance();
  /**
   *
   *
   * <pre>
   * Specifies if the place has an entrance that is wheelchair-accessible.
   * </pre>
   *
   * <code>optional bool wheelchair_accessible_entrance = 37;</code>
   *
   * @return The wheelchairAccessibleEntrance.
   */
  boolean getWheelchairAccessibleEntrance();

  /**
   *
   *
   * <pre>
   * Specifies if the place supports reservations.
   * </pre>
   *
   * <code>optional bool reservable = 38;</code>
   *
   * @return Whether the reservable field is set.
   */
  boolean hasReservable();
  /**
   *
   *
   * <pre>
   * Specifies if the place supports reservations.
   * </pre>
   *
   * <code>optional bool reservable = 38;</code>
   *
   * @return The reservable.
   */
  boolean getReservable();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves breakfast.
   * </pre>
   *
   * <code>optional bool serves_breakfast = 39;</code>
   *
   * @return Whether the servesBreakfast field is set.
   */
  boolean hasServesBreakfast();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves breakfast.
   * </pre>
   *
   * <code>optional bool serves_breakfast = 39;</code>
   *
   * @return The servesBreakfast.
   */
  boolean getServesBreakfast();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves lunch.
   * </pre>
   *
   * <code>optional bool serves_lunch = 40;</code>
   *
   * @return Whether the servesLunch field is set.
   */
  boolean hasServesLunch();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves lunch.
   * </pre>
   *
   * <code>optional bool serves_lunch = 40;</code>
   *
   * @return The servesLunch.
   */
  boolean getServesLunch();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves dinner.
   * </pre>
   *
   * <code>optional bool serves_dinner = 41;</code>
   *
   * @return Whether the servesDinner field is set.
   */
  boolean hasServesDinner();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves dinner.
   * </pre>
   *
   * <code>optional bool serves_dinner = 41;</code>
   *
   * @return The servesDinner.
   */
  boolean getServesDinner();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves beer.
   * </pre>
   *
   * <code>optional bool serves_beer = 42;</code>
   *
   * @return Whether the servesBeer field is set.
   */
  boolean hasServesBeer();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves beer.
   * </pre>
   *
   * <code>optional bool serves_beer = 42;</code>
   *
   * @return The servesBeer.
   */
  boolean getServesBeer();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves wine.
   * </pre>
   *
   * <code>optional bool serves_wine = 43;</code>
   *
   * @return Whether the servesWine field is set.
   */
  boolean hasServesWine();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves wine.
   * </pre>
   *
   * <code>optional bool serves_wine = 43;</code>
   *
   * @return The servesWine.
   */
  boolean getServesWine();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves brunch.
   * </pre>
   *
   * <code>optional bool serves_brunch = 44;</code>
   *
   * @return Whether the servesBrunch field is set.
   */
  boolean hasServesBrunch();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves brunch.
   * </pre>
   *
   * <code>optional bool serves_brunch = 44;</code>
   *
   * @return The servesBrunch.
   */
  boolean getServesBrunch();

  /**
   *
   *
   * <pre>
   * Specifies if the place serves vegetarian food.
   * </pre>
   *
   * <code>optional bool serves_vegetarian_food = 45;</code>
   *
   * @return Whether the servesVegetarianFood field is set.
   */
  boolean hasServesVegetarianFood();
  /**
   *
   *
   * <pre>
   * Specifies if the place serves vegetarian food.
   * </pre>
   *
   * <code>optional bool serves_vegetarian_food = 45;</code>
   *
   * @return The servesVegetarianFood.
   */
  boolean getServesVegetarianFood();

  /**
   *
   *
   * <pre>
   * The hours of operation for the next seven days (including today). The time
   * period starts at midnight on the date of the request and ends at 11:59 pm
   * six days later. This field includes the special_days subfield of all hours,
   * set for dates that have exceptional hours.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours current_opening_hours = 46;</code>
   *
   * @return Whether the currentOpeningHours field is set.
   */
  boolean hasCurrentOpeningHours();
  /**
   *
   *
   * <pre>
   * The hours of operation for the next seven days (including today). The time
   * period starts at midnight on the date of the request and ends at 11:59 pm
   * six days later. This field includes the special_days subfield of all hours,
   * set for dates that have exceptional hours.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours current_opening_hours = 46;</code>
   *
   * @return The currentOpeningHours.
   */
  com.google.maps.places.v1.Place.OpeningHours getCurrentOpeningHours();
  /**
   *
   *
   * <pre>
   * The hours of operation for the next seven days (including today). The time
   * period starts at midnight on the date of the request and ends at 11:59 pm
   * six days later. This field includes the special_days subfield of all hours,
   * set for dates that have exceptional hours.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.OpeningHours current_opening_hours = 46;</code>
   */
  com.google.maps.places.v1.Place.OpeningHoursOrBuilder getCurrentOpeningHoursOrBuilder();

  /**
   *
   *
   * <pre>
   * Contains an array of entries for the next seven days including information
   * about secondary hours of a business. Secondary hours are different from a
   * business's main hours. For example, a restaurant can specify drive through
   * hours or delivery hours as its secondary hours. This field populates the
   * type subfield, which draws from a predefined list of opening hours types
   * (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
   * place. This field includes the special_days subfield of all hours, set for
   * dates that have exceptional hours.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours current_secondary_opening_hours = 47;
   * </code>
   */
  java.util.List<com.google.maps.places.v1.Place.OpeningHours>
      getCurrentSecondaryOpeningHoursList();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for the next seven days including information
   * about secondary hours of a business. Secondary hours are different from a
   * business's main hours. For example, a restaurant can specify drive through
   * hours or delivery hours as its secondary hours. This field populates the
   * type subfield, which draws from a predefined list of opening hours types
   * (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
   * place. This field includes the special_days subfield of all hours, set for
   * dates that have exceptional hours.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours current_secondary_opening_hours = 47;
   * </code>
   */
  com.google.maps.places.v1.Place.OpeningHours getCurrentSecondaryOpeningHours(int index);
  /**
   *
   *
   * <pre>
   * Contains an array of entries for the next seven days including information
   * about secondary hours of a business. Secondary hours are different from a
   * business's main hours. For example, a restaurant can specify drive through
   * hours or delivery hours as its secondary hours. This field populates the
   * type subfield, which draws from a predefined list of opening hours types
   * (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
   * place. This field includes the special_days subfield of all hours, set for
   * dates that have exceptional hours.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours current_secondary_opening_hours = 47;
   * </code>
   */
  int getCurrentSecondaryOpeningHoursCount();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for the next seven days including information
   * about secondary hours of a business. Secondary hours are different from a
   * business's main hours. For example, a restaurant can specify drive through
   * hours or delivery hours as its secondary hours. This field populates the
   * type subfield, which draws from a predefined list of opening hours types
   * (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
   * place. This field includes the special_days subfield of all hours, set for
   * dates that have exceptional hours.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours current_secondary_opening_hours = 47;
   * </code>
   */
  java.util.List<? extends com.google.maps.places.v1.Place.OpeningHoursOrBuilder>
      getCurrentSecondaryOpeningHoursOrBuilderList();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for the next seven days including information
   * about secondary hours of a business. Secondary hours are different from a
   * business's main hours. For example, a restaurant can specify drive through
   * hours or delivery hours as its secondary hours. This field populates the
   * type subfield, which draws from a predefined list of opening hours types
   * (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
   * place. This field includes the special_days subfield of all hours, set for
   * dates that have exceptional hours.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours current_secondary_opening_hours = 47;
   * </code>
   */
  com.google.maps.places.v1.Place.OpeningHoursOrBuilder getCurrentSecondaryOpeningHoursOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Contains an array of entries for information about regular secondary hours
   * of a business. Secondary hours are different from a business's main hours.
   * For example, a restaurant can specify drive through hours or delivery hours
   * as its secondary hours. This field populates the type subfield, which draws
   * from a predefined list of opening hours types (such as DRIVE_THROUGH,
   * PICKUP, or TAKEOUT) based on the types of the place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours secondary_opening_hours = 49;</code>
   */
  java.util.List<com.google.maps.places.v1.Place.OpeningHours> getSecondaryOpeningHoursList();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for information about regular secondary hours
   * of a business. Secondary hours are different from a business's main hours.
   * For example, a restaurant can specify drive through hours or delivery hours
   * as its secondary hours. This field populates the type subfield, which draws
   * from a predefined list of opening hours types (such as DRIVE_THROUGH,
   * PICKUP, or TAKEOUT) based on the types of the place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours secondary_opening_hours = 49;</code>
   */
  com.google.maps.places.v1.Place.OpeningHours getSecondaryOpeningHours(int index);
  /**
   *
   *
   * <pre>
   * Contains an array of entries for information about regular secondary hours
   * of a business. Secondary hours are different from a business's main hours.
   * For example, a restaurant can specify drive through hours or delivery hours
   * as its secondary hours. This field populates the type subfield, which draws
   * from a predefined list of opening hours types (such as DRIVE_THROUGH,
   * PICKUP, or TAKEOUT) based on the types of the place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours secondary_opening_hours = 49;</code>
   */
  int getSecondaryOpeningHoursCount();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for information about regular secondary hours
   * of a business. Secondary hours are different from a business's main hours.
   * For example, a restaurant can specify drive through hours or delivery hours
   * as its secondary hours. This field populates the type subfield, which draws
   * from a predefined list of opening hours types (such as DRIVE_THROUGH,
   * PICKUP, or TAKEOUT) based on the types of the place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours secondary_opening_hours = 49;</code>
   */
  java.util.List<? extends com.google.maps.places.v1.Place.OpeningHoursOrBuilder>
      getSecondaryOpeningHoursOrBuilderList();
  /**
   *
   *
   * <pre>
   * Contains an array of entries for information about regular secondary hours
   * of a business. Secondary hours are different from a business's main hours.
   * For example, a restaurant can specify drive through hours or delivery hours
   * as its secondary hours. This field populates the type subfield, which draws
   * from a predefined list of opening hours types (such as DRIVE_THROUGH,
   * PICKUP, or TAKEOUT) based on the types of the place.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place.OpeningHours secondary_opening_hours = 49;</code>
   */
  com.google.maps.places.v1.Place.OpeningHoursOrBuilder getSecondaryOpeningHoursOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Contains a summary of the place. A summary is comprised of a textual
   * overview, and also includes the language code for these if applicable.
   * Summary text must be presented as-is and can not be modified or altered.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.EditorialSummary editorial_summary = 48;</code>
   *
   * @return Whether the editorialSummary field is set.
   */
  boolean hasEditorialSummary();
  /**
   *
   *
   * <pre>
   * Contains a summary of the place. A summary is comprised of a textual
   * overview, and also includes the language code for these if applicable.
   * Summary text must be presented as-is and can not be modified or altered.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.EditorialSummary editorial_summary = 48;</code>
   *
   * @return The editorialSummary.
   */
  com.google.maps.places.v1.Place.EditorialSummary getEditorialSummary();
  /**
   *
   *
   * <pre>
   * Contains a summary of the place. A summary is comprised of a textual
   * overview, and also includes the language code for these if applicable.
   * Summary text must be presented as-is and can not be modified or altered.
   * </pre>
   *
   * <code>.google.maps.places.v1.Place.EditorialSummary editorial_summary = 48;</code>
   */
  com.google.maps.places.v1.Place.EditorialSummaryOrBuilder getEditorialSummaryOrBuilder();
}
