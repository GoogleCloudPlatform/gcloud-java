/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkeconnect/gateway/v1/gateway.proto

// Protobuf Java Version: 3.25.3
package com.google.cloud.gkeconnect.gateway.v1;

public final class GatewayProto {
  private GatewayProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n0google/cloud/gkeconnect/gateway/v1/gat"
          + "eway.proto\022\"google.cloud.gkeconnect.gate"
          + "way.v1\032\027google/api/client.proto22\n\016Gatew"
          + "ayService\032 \312A\035connectgateway.googleapis."
          + "comB\355\001\n&com.google.cloud.gkeconnect.gate"
          + "way.v1B\014GatewayProtoP\001Z@cloud.google.com"
          + "/go/gkeconnect/gateway/apiv1/gatewaypb;g"
          + "atewaypb\252\002\"Google.Cloud.GkeConnect.Gatew"
          + "ay.V1\312\002\"Google\\Cloud\\GkeConnect\\Gateway\\"
          + "V1\352\002&Google::Cloud::GkeConnect::Gateway:"
          + ":V1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.ClientProto.getDescriptor(),
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.ClientProto.defaultHost);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.ClientProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
