/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oslogin/v1beta/oslogin.proto

// Protobuf Java Version: 3.25.2
package com.google.cloud.oslogin.v1beta;

public interface SecurityKeyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.oslogin.v1beta.SecurityKey)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Public key text in SSH format, defined by
   * [RFC4253]("https://www.ietf.org/rfc/rfc4253.txt") section 6.6.
   * </pre>
   *
   * <code>string public_key = 1;</code>
   *
   * @return The publicKey.
   */
  java.lang.String getPublicKey();
  /**
   *
   *
   * <pre>
   * Public key text in SSH format, defined by
   * [RFC4253]("https://www.ietf.org/rfc/rfc4253.txt") section 6.6.
   * </pre>
   *
   * <code>string public_key = 1;</code>
   *
   * @return The bytes for publicKey.
   */
  com.google.protobuf.ByteString getPublicKeyBytes();

  /**
   *
   *
   * <pre>
   * Hardware-backed private key text in SSH format.
   * </pre>
   *
   * <code>string private_key = 2;</code>
   *
   * @return The privateKey.
   */
  java.lang.String getPrivateKey();
  /**
   *
   *
   * <pre>
   * Hardware-backed private key text in SSH format.
   * </pre>
   *
   * <code>string private_key = 2;</code>
   *
   * @return The bytes for privateKey.
   */
  com.google.protobuf.ByteString getPrivateKeyBytes();

  /**
   *
   *
   * <pre>
   * The U2F protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.UniversalTwoFactor universal_two_factor = 3;</code>
   *
   * @return Whether the universalTwoFactor field is set.
   */
  boolean hasUniversalTwoFactor();
  /**
   *
   *
   * <pre>
   * The U2F protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.UniversalTwoFactor universal_two_factor = 3;</code>
   *
   * @return The universalTwoFactor.
   */
  com.google.cloud.oslogin.v1beta.UniversalTwoFactor getUniversalTwoFactor();
  /**
   *
   *
   * <pre>
   * The U2F protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.UniversalTwoFactor universal_two_factor = 3;</code>
   */
  com.google.cloud.oslogin.v1beta.UniversalTwoFactorOrBuilder getUniversalTwoFactorOrBuilder();

  /**
   *
   *
   * <pre>
   * The Web Authentication protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.WebAuthn web_authn = 4;</code>
   *
   * @return Whether the webAuthn field is set.
   */
  boolean hasWebAuthn();
  /**
   *
   *
   * <pre>
   * The Web Authentication protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.WebAuthn web_authn = 4;</code>
   *
   * @return The webAuthn.
   */
  com.google.cloud.oslogin.v1beta.WebAuthn getWebAuthn();
  /**
   *
   *
   * <pre>
   * The Web Authentication protocol type.
   * </pre>
   *
   * <code>.google.cloud.oslogin.v1beta.WebAuthn web_authn = 4;</code>
   */
  com.google.cloud.oslogin.v1beta.WebAuthnOrBuilder getWebAuthnOrBuilder();

  /**
   *
   *
   * <pre>
   * The security key nickname explicitly set by the user.
   * </pre>
   *
   * <code>optional string device_nickname = 5;</code>
   *
   * @return Whether the deviceNickname field is set.
   */
  boolean hasDeviceNickname();
  /**
   *
   *
   * <pre>
   * The security key nickname explicitly set by the user.
   * </pre>
   *
   * <code>optional string device_nickname = 5;</code>
   *
   * @return The deviceNickname.
   */
  java.lang.String getDeviceNickname();
  /**
   *
   *
   * <pre>
   * The security key nickname explicitly set by the user.
   * </pre>
   *
   * <code>optional string device_nickname = 5;</code>
   *
   * @return The bytes for deviceNickname.
   */
  com.google.protobuf.ByteString getDeviceNicknameBytes();

  com.google.cloud.oslogin.v1beta.SecurityKey.ProtocolTypeCase getProtocolTypeCase();
}
