version: 2.0

anchor_docker: &anchor_docker
  docker:
    - image: circleci/openjdk:8-jdk
      environment:
        TERM: dumb

anchor_auth_vars: &anchor_auth_vars
  environment:
    GCLOUD_PROJECT: gcloud-devel
    GOOGLE_APPLICATION_CREDENTIALS: .circleci/it-service-account.json

anchor_run_decrypt: &anchor_run_decrypt
  name: Decrypt credentials
  command: |
    openssl aes-256-cbc -md sha256 -d -in .circleci/it-service-account.json.enc \
        -out .circleci/it-service-account.json -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"

jobs:
  bigquery_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-bigquery
          command: ./utilities/verify_single_it.sh google-cloud-bigquery
  compute_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-compute
          command: ./utilities/verify_single_it.sh google-cloud-compute
  datastore_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-datastore
          command: ./utilities/verify_single_it.sh google-cloud-datastore
  dns_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-dns
          command: ./utilities/verify_single_it.sh google-cloud-dns
  logging_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-logging
          command: ./utilities/verify_single_it.sh google-cloud-logging
  notification_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-notification
          command: ./utilities/verify_single_it.sh google-cloud-notification
  pubsub_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-pubsub
          command: ./utilities/verify_single_it.sh google-cloud-pubsub
  spanner_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-spanner
          command: ./utilities/verify_single_it.sh google-cloud-spanner
  speech_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-speech
          command: ./utilities/verify_single_it.sh google-cloud-speech
  translate_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-translate
          command: ./utilities/verify_single_it.sh google-cloud-translate

workflows:
  version: 2
  build:
    jobs:
      - bigquery_it
      - compute_it
      - datastore_it
      - dns_it
      - logging_it
      - notification_it
      - pubsub_it
      - spanner_it
      - speech_it
      - translate_it
