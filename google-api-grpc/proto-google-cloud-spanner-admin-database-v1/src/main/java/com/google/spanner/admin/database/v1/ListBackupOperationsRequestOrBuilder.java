// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/admin/database/v1/backup.proto

package com.google.spanner.admin.database.v1;

public interface ListBackupOperationsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.admin.database.v1.ListBackupOperationsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The instance of the backup operations. Values are of
   * the form `projects/&lt;project&gt;/instances/&lt;instance&gt;`.
   * </pre>
   *
   * <code>string parent = 1;</code>
   */
  java.lang.String getParent();
  /**
   *
   *
   * <pre>
   * Required. The instance of the backup operations. Values are of
   * the form `projects/&lt;project&gt;/instances/&lt;instance&gt;`.
   * </pre>
   *
   * <code>string parent = 1;</code>
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * A filter expression that filters what operations are returned in the
   * response.
   * The response returns a list of
   * [long-running operations][google.longrunning.Operation] whose names are
   * prefixed by a backup name within the specified instance. The long-running
   * operation [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata.
   * The filter expression must specify the field name of an operation, a
   * comparison operator, and the value that you want to use for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be
   * &lt;, &gt;, &lt;=, &gt;=, !=, =, or :. Colon ‘:’ represents a HAS operator which is
   * roughly synonymous with equality. Filter rules are case insensitive.
   * The long-running operation fields eligible for filtering are:
   *   * `name` --&gt; The name of the long-running operation
   *   * `done` --&gt; False if the operation is in progress, else true.
   *   * `metadata.type_url` (using filter string `metadata.&#64;type`) and fields
   *      in `metadata.value` (using filter string `metadata.&lt;field_name&gt;`,
   *      where &lt;field_name&gt; is a field in metadata.value) are  eligible for
   *      filtering.
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. By default, each expression is an AND expression. However,
   * you can include AND, OR, and NOT expressions explicitly.
   * Some examples of using filters are:
   *   * `done:true` --&gt; The operation is complete.
   *   * `metadata.database:prod`
   *          --&gt; The database the backup was taken from has a name containing
   *              the string "prod".
   *   * `(metadata.&#64;type:type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata)
   *      AND (metadata.name:howl)
   *      AND (metadata.progress.start_time &lt; &#92;"2018-03-28T14:50:00Z&#92;")
   *      AND (error:*)`
   *          --&gt; Return CreateBackup operations where the created backup name
   *              contains the string "howl", the progress.start_time of the
   *              backup operation is before 2018-03-28T14:50:00Z, and the
   *              operation returned an error.
   * </pre>
   *
   * <code>string filter = 2;</code>
   */
  java.lang.String getFilter();
  /**
   *
   *
   * <pre>
   * A filter expression that filters what operations are returned in the
   * response.
   * The response returns a list of
   * [long-running operations][google.longrunning.Operation] whose names are
   * prefixed by a backup name within the specified instance. The long-running
   * operation [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata.
   * The filter expression must specify the field name of an operation, a
   * comparison operator, and the value that you want to use for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be
   * &lt;, &gt;, &lt;=, &gt;=, !=, =, or :. Colon ‘:’ represents a HAS operator which is
   * roughly synonymous with equality. Filter rules are case insensitive.
   * The long-running operation fields eligible for filtering are:
   *   * `name` --&gt; The name of the long-running operation
   *   * `done` --&gt; False if the operation is in progress, else true.
   *   * `metadata.type_url` (using filter string `metadata.&#64;type`) and fields
   *      in `metadata.value` (using filter string `metadata.&lt;field_name&gt;`,
   *      where &lt;field_name&gt; is a field in metadata.value) are  eligible for
   *      filtering.
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. By default, each expression is an AND expression. However,
   * you can include AND, OR, and NOT expressions explicitly.
   * Some examples of using filters are:
   *   * `done:true` --&gt; The operation is complete.
   *   * `metadata.database:prod`
   *          --&gt; The database the backup was taken from has a name containing
   *              the string "prod".
   *   * `(metadata.&#64;type:type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata)
   *      AND (metadata.name:howl)
   *      AND (metadata.progress.start_time &lt; &#92;"2018-03-28T14:50:00Z&#92;")
   *      AND (error:*)`
   *          --&gt; Return CreateBackup operations where the created backup name
   *              contains the string "howl", the progress.start_time of the
   *              backup operation is before 2018-03-28T14:50:00Z, and the
   *              operation returned an error.
   * </pre>
   *
   * <code>string filter = 2;</code>
   */
  com.google.protobuf.ByteString getFilterBytes();

  /**
   *
   *
   * <pre>
   * Number of operations to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   * </pre>
   *
   * <code>int32 page_size = 3;</code>
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.database.v1.ListBackupOperationsResponse.next_page_token]
   * from a previous [ListBackupOperationsResponse][google.spanner.admin.database.v1.ListBackupOperationsResponse] to the
   * same `parent` and with the same `filter`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   */
  java.lang.String getPageToken();
  /**
   *
   *
   * <pre>
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.database.v1.ListBackupOperationsResponse.next_page_token]
   * from a previous [ListBackupOperationsResponse][google.spanner.admin.database.v1.ListBackupOperationsResponse] to the
   * same `parent` and with the same `filter`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   */
  com.google.protobuf.ByteString getPageTokenBytes();
}
