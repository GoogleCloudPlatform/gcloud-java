// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/css/v1/css_product_inputs.proto

package com.google.shopping.css.v1;

public interface InsertCssProductInputRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.shopping.css.v1.InsertCssProductInputRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The account where this CSS Product will be inserted.
   * Format: accounts/{account}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * Required. The account where this CSS Product will be inserted.
   * Format: accounts/{account}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Required. The CSS Product Input to insert.
   * </pre>
   *
   * <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the cssProductInput field is set.
   */
  boolean hasCssProductInput();
  /**
   * <pre>
   * Required. The CSS Product Input to insert.
   * </pre>
   *
   * <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The cssProductInput.
   */
  com.google.shopping.css.v1.CssProductInput getCssProductInput();
  /**
   * <pre>
   * Required. The CSS Product Input to insert.
   * </pre>
   *
   * <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.shopping.css.v1.CssProductInputOrBuilder getCssProductInputOrBuilder();

  /**
   * <pre>
   * Required. The primary or supplemental feed id. If CSS Product already
   * exists and feed id provided is different, then the CSS Product will be
   * moved to a new feed. Note: For now, CSSs do not need to provide feed ids as
   * we create feeds on the fly. We do not have supplemental feed support for
   * CSS Products yet.
   * </pre>
   *
   * <code>int64 feed_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The feedId.
   */
  long getFeedId();
}
