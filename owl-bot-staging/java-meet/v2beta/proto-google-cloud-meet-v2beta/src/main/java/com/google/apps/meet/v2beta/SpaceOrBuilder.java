// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/meet/v2beta/resource.proto

package com.google.apps.meet.v2beta;

public interface SpaceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.apps.meet.v2beta.Space)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Immutable. Resource name of the space.
   * Format: `spaces/{space}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Immutable. Resource name of the space.
   * Format: `spaces/{space}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Output only. URI used to join meeting, such as
   * `https://meet.google.com/abc-mnop-xyz`.
   * </pre>
   *
   * <code>string meeting_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The meetingUri.
   */
  java.lang.String getMeetingUri();
  /**
   * <pre>
   * Output only. URI used to join meeting, such as
   * `https://meet.google.com/abc-mnop-xyz`.
   * </pre>
   *
   * <code>string meeting_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for meetingUri.
   */
  com.google.protobuf.ByteString
      getMeetingUriBytes();

  /**
   * <pre>
   * Output only. Type friendly code to join the meeting. Format:
   * `[a-z]+-[a-z]+-[a-z]+` such as `abc-mnop-xyz`. The maximum length is 128
   * characters. Can ONLY be used as alias of the space ID to get the space.
   * </pre>
   *
   * <code>string meeting_code = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The meetingCode.
   */
  java.lang.String getMeetingCode();
  /**
   * <pre>
   * Output only. Type friendly code to join the meeting. Format:
   * `[a-z]+-[a-z]+-[a-z]+` such as `abc-mnop-xyz`. The maximum length is 128
   * characters. Can ONLY be used as alias of the space ID to get the space.
   * </pre>
   *
   * <code>string meeting_code = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for meetingCode.
   */
  com.google.protobuf.ByteString
      getMeetingCodeBytes();

  /**
   * <pre>
   * Configuration pertaining to the meeting space.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.SpaceConfig config = 5;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <pre>
   * Configuration pertaining to the meeting space.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.SpaceConfig config = 5;</code>
   * @return The config.
   */
  com.google.apps.meet.v2beta.SpaceConfig getConfig();
  /**
   * <pre>
   * Configuration pertaining to the meeting space.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.SpaceConfig config = 5;</code>
   */
  com.google.apps.meet.v2beta.SpaceConfigOrBuilder getConfigOrBuilder();

  /**
   * <pre>
   * Active conference if it exists.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.ActiveConference active_conference = 6;</code>
   * @return Whether the activeConference field is set.
   */
  boolean hasActiveConference();
  /**
   * <pre>
   * Active conference if it exists.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.ActiveConference active_conference = 6;</code>
   * @return The activeConference.
   */
  com.google.apps.meet.v2beta.ActiveConference getActiveConference();
  /**
   * <pre>
   * Active conference if it exists.
   * </pre>
   *
   * <code>.google.apps.meet.v2beta.ActiveConference active_conference = 6;</code>
   */
  com.google.apps.meet.v2beta.ActiveConferenceOrBuilder getActiveConferenceOrBuilder();
}
