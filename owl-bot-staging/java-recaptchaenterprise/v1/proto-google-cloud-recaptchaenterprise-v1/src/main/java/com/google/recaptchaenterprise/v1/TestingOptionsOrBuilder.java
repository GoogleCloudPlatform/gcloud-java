// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/recaptchaenterprise/v1/recaptchaenterprise.proto

// Protobuf Java Version: 3.25.3
package com.google.recaptchaenterprise.v1;

public interface TestingOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.recaptchaenterprise.v1.TestingOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional. All assessments for this Key will return this score. Must be
   * between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
   * </pre>
   *
   * <code>float testing_score = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The testingScore.
   */
  float getTestingScore();

  /**
   * <pre>
   * Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all
   * challenge requests for this site will return nocaptcha if NOCAPTCHA, or an
   * unsolvable challenge if CHALLENGE.
   * </pre>
   *
   * <code>.google.cloud.recaptchaenterprise.v1.TestingOptions.TestingChallenge testing_challenge = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enum numeric value on the wire for testingChallenge.
   */
  int getTestingChallengeValue();
  /**
   * <pre>
   * Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all
   * challenge requests for this site will return nocaptcha if NOCAPTCHA, or an
   * unsolvable challenge if CHALLENGE.
   * </pre>
   *
   * <code>.google.cloud.recaptchaenterprise.v1.TestingOptions.TestingChallenge testing_challenge = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The testingChallenge.
   */
  com.google.recaptchaenterprise.v1.TestingOptions.TestingChallenge getTestingChallenge();
}
