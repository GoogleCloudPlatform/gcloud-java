// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/discoveryengine/v1alpha/chunk_service.proto

// Protobuf Java Version: 3.25.3
package com.google.cloud.discoveryengine.v1alpha;

public interface GetChunkRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.discoveryengine.v1alpha.GetChunkRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. Full resource name of
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}`.
   *
   * If the caller does not have permission to access the
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], regardless of whether
   * or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * If the requested [Chunk][google.cloud.discoveryengine.v1alpha.Chunk] does
   * not exist, a `NOT_FOUND` error is returned.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Required. Full resource name of
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}`.
   *
   * If the caller does not have permission to access the
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], regardless of whether
   * or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * If the requested [Chunk][google.cloud.discoveryengine.v1alpha.Chunk] does
   * not exist, a `NOT_FOUND` error is returned.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();
}
