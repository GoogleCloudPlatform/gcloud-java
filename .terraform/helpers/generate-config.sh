#
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
function initializeGeneratedFiles() {
  touch generated-outputs.tf
  echo "# Auto-generated by generate-config.sh
  output \"project_id\" {
    value = local.data.project_id
  }
  output \"service_account\" {
    value = local.data.service_account
  }
  " >generated-outputs.tf

  cp ./helpers/generated-main.template.tf generated-main.tf
  cp ./helpers/generated-variables.template.tf generated-variables.tf
}

function appendModule() {
  friendlyName=$(echo "$1" | tr '-' _)

  echo "module \"$friendlyName\" {
    source = \"./../$1/.terraform\"
    inputs = local.data
    depends_on = [time_sleep.for_1m_allowPermissionsToTakeEffect]
  }" >>generated-main.tf

  echo "output \"$friendlyName\" {
    value = module.$friendlyName
    sensitive = true
  }" >>generated-outputs.tf
}

function appendAllModules() {
  # Either use given module list, or get a list of all modules in the parent directory.
  if [ -n "$1" ]; then
    modules=$1
  else
    modules=$(source ./helpers/list-all-modules.sh)
  fi
  IFS=':'
  for module in $modules; do
    if [ -d "../$module/.terraform" ]; then
      appendModule "${module%/}" # Remove possible trailing '/'
    fi
  done
}

# Ensure current directory is <root>/.terraform.
generateDir="$(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"
pushd "$generateDir/.." >/dev/null || exit

initializeGeneratedFiles
appendAllModules "$1"

popd >/dev/null || exit
